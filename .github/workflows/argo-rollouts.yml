name: Argo Rollouts Deploy

on:
  workflow_dispatch:
    inputs:
      image:
        description: "Container image to deploy (e.g., ghcr.io/owner/repo:tag)"
        required: true
        type: string
      host:
        description: "Ingress host (e.g., app.example.com)"
        required: true
        type: string
      promote:
        description: "Auto promote after canary steps"
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE: ${{ inputs.image }}
      HOST: ${{ inputs.host }}
      PROMOTE: ${{ inputs.promote }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

      - name: Install Argo Rollouts controller (idempotent)
        run: |
          kubectl apply -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml
          kubectl -n argo-rollouts rollout status deploy/argo-rollouts --timeout=180s || true

      - name: Install kubectl-argo-rollouts plugin
        run: |
          curl -sL -o kubectl-argo-rollouts https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64
          chmod +x kubectl-argo-rollouts
          sudo mv kubectl-argo-rollouts /usr/local/bin/
          kubectl-argo-rollouts version || true

      - name: Ensure namespace and base resources
        run: |
          kubectl apply -f deploy/k8s/base/namespace.yaml
          sed -e "s/INGRESS_HOST_PLACEHOLDER/${HOST}/g" deploy/k8s/base/ingress.yaml | kubectl apply -f -
          kubectl apply -f deploy/k8s/base/service.yaml
          kubectl apply -f deploy/k8s/canary/service.yaml

      - name: Apply AnalysisTemplate
        run: |
          kubectl apply -f deploy/k8s/argo-rollouts/analysis-template.yaml

      - name: Apply Rollout (canary)
        run: |
          sed -e "s#IMAGE_PLACEHOLDER#${IMAGE}#g" deploy/k8s/argo-rollouts/rollout.yaml | kubectl apply -f -
          kubectl-argo-rollouts get rollout education-platform -n education-platform

      - name: Watch rollout status
        run: |
          kubectl-argo-rollouts status rollout/education-platform -n education-platform --watch --timeout 10m || true

      - name: Promote to 100% (optional)
        if: env.PROMOTE == 'true'
        run: |
          kubectl-argo-rollouts promote rollout/education-platform -n education-platform
          kubectl-argo-rollouts status rollout/education-platform -n education-platform --watch --timeout 10m || true
